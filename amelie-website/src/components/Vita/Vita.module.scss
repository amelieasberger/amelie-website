@use '../../styles/colors.module.scss' as colors;

$spacing: 20px;
$borderRadius: 6px;
$iconSize: 32px;
$boxShadow: 0 2px 10px 0px colors.$shadowColor;

@mixin icon-line($direction, $animationName, $animationDelay, $color) {
    $animation: $animationName 2s forwards $animationDelay ease-in-out;
    content: "";
    position: absolute;
    background: $color;
  
    @if $direction == vertical {
        width: 2px;
        height: 100%;
        left: 50%;
        top: 0;
        right: auto;
        transform: translateX(-50%);
        animation: $animation;
    } @else if $direction == horizontal {
        width: 100%;
        height: 2px;
        top: 50%;
        right: 0;
        left: auto;
        transform: translateY(-50%);
        animation: $animation;
    }
}
  
.container {
    padding: 40px 20px;
}

.bulletPointContainer {
    list-style: disc;
    margin-left: $spacing;
    margin-top: 10px;
    font-size: 14px;
    line-height: 1.5;
}

.timeline {
	display: flex;
	flex-direction: column;
	margin: $spacing auto;
	position: relative;
    z-index: 1;
}

.event {
    opacity: 0;
    animation-delay: 2s;
    margin-bottom: $spacing;    
    border-radius: $borderRadius;
    display: flex;
    align-self: center;
    position: relative;

    // remove bottom line for last icon
    &:last-child {
        .icon {
            &:before {
                content: none !important;
            }
        }
    }

    // important is used here to override styles for nth-child(2n + 1) without duplicating this block
    @media (max-width: 900px) {
        flex-direction: column !important;
        width: 100%;

        .content, 
        .date {
            width: 100%;
        }

        .content {
            border-radius: 0 0 $borderRadius $borderRadius !important;
        }

        .date {
            padding: $spacing;
            border-radius: $borderRadius $borderRadius 0 0 !important;
        }

        .icon {
            display: none;
        }
    }
}

// every second child should be reversed and should have different colors
.event:nth-child(2n + 1) {
    flex-direction: row-reverse;
    animation-delay: 1s;

    &:after {
        background: colors.$colorDarkBlue;
    }

    // reverse border radius
    .date {
        border-radius: 0 $borderRadius $borderRadius 0;
    }

    .content {
        border-radius: $borderRadius 0 0 $borderRadius;
    }
    
    .date {
        color: colors.$colorLightBlue;
        background: colors.$colorDarkBlue;
    }

    .title {
        color: colors.$colorDarkBlue;
    }

    .icon {
        background: colors.$colorLightBlue;

        &:before {
            @include icon-line(vertical, fillTop, 2s, colors.$colorLightBlue);
        }

        &:after {
            @include icon-line(horizontal, fillLeft, 3s, colors.$colorLightBlue);
        }
    }
}

.title {
    font-size: 17px;
    line-height: 1.3;
    text-transform: uppercase;
    font-weight: 600;
    color: colors.$colorDarkViolet;
    letter-spacing: 1px;
    margin-bottom: 3px;
}

.icon {
    align-self: center;
    margin: 0 $spacing;
    background: colors.$colorLightViolet;
    border-radius: 100%;
    box-shadow: 0 4px 6px colors.$shadowColor, 0 1px 3px colors.$shadowColor;
    padding: $iconSize;
    position: relative;

    &:before {
        @include icon-line(vertical, fillTop, 2s, colors.$colorLightViolet);
    }

    &:after {
        @include icon-line(horizontal, fillLeftOdd, 2s, colors.$colorLightViolet);
    }
}

.description {
    font-size: 15px;
    line-height: 1.3;
}

.content {
    padding: $spacing;
    box-shadow: $boxShadow;
    background: colors.$colorWhite;
    width: 500px;
    border-radius: 0 $borderRadius $borderRadius 0;
}

.date {
    color: colors.$colorLightViolet;
    font-size: 18px;
    font-weight: 600;
    background: colors.$colorDarkViolet;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 $spacing;
    border-radius: $borderRadius 0 0 $borderRadius;
    box-shadow: 2px 2px 10px 0px colors.$shadowColor;
    width: 130px;
    z-index: 1;
}

.fadeInUp {
    opacity: 0;
    animation-name: fadeInUp;
    animation-duration: 1s;
    animation-fill-mode: both;
}

// animation for lines
@keyframes fillLeft {
	100% {
		right: 100%;
	}
}

@keyframes fillTop {
	100% {
		top: 100%;
	}
}

@keyframes fillLeftOdd {
	100% {
		left: 100%;
	}
}

// animation for fade in content boxes
@keyframes fadeInUp {
    from {
        transform: translate3d(0, 40px, 0)
    }

    to {
        transform: translate3d(0, 0, 0);
        opacity: 1
    }
}
